version: 2
jobs:
  commit:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Compile
          command: ./gradlew assembleDebug
      - run:
          name: Run Inspection
          command: ./gradlew lint
      - run:
          name: Run Tests
          command: ./gradlew jacocoTestReport
      - run:
          name: Run Save coverage
          command: |
              curl -s https://codecov.io/bash > .codecov
              chmod +x .codecov
              ./.codecov
      - run:
          name: Run Save test results
          command: |
              mkdir -p ~/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - run:
          name: Run Deploy
          command: |
              curl \
                -F "token=${DEPLOY_GATE_API_KEY}" \
                -F "file=@app/build/outputs/apk/debug/app-debug.apk" \
                -F "message=sample" \
                https://deploygate.com/api/users/horie1024/apps
      - persist_to_workspace:
          root: .
          paths:
            - .

  acceptance:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
              sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
              sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Run Compile
          command: ./gradlew assembleDebugAndroidTest
      - run:
          name: Test with Firebase Test Lab
          command: >
              sudo gcloud firebase test android run \
                test_settings.yml:instrumentation-test \
                --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
      - run:
          name: Install gsutil dependency and copy test results data
          when: always
          command: |
              sudo pip install -U crcmod
              mkdir -p ~/gsutil/
              sudo gsutil -m cp -r -U `sudo gsutil ls gs://cloud-test-test-project-8a3d9 | tail -1` ~/gsutil/ | true
      - store_artifacts:
         path: ~/gsutil/
      - store_test_results:
         path: ~/gsutil/

  prepare_uat:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28-alpha
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Deploy
          command: |
              curl \
                -F "token=${DEPLOY_GATE_API_KEY}" \
                -F "file=@app/build/outputs/apk/debug/app-debug.apk" \
                -F "message=sample" \
                -F "distribution_name=${CIRCLE_TAG}" \
                https://deploygate.com/api/users/horie1024/apps

  release:
      working_directory: ~/code
      docker:
        - image: circleci/android:api-28-alpha
      steps:
        - attach_workspace:
            at: .
        - run:
            name: Store Google Play Android Developer Service Account
            command: echo $GOOGLE_PLAY_SERVICE_KEY | base64 --decode > app/google-play-service-key.json
        - run:
            name: Decrypted keystore
            command: |
                openssl aes-256-cbc -d \
                    -in app/release.keystore.jks.encrypted \
                    -out app/release.keystore.jks -k $DECRYPTED_KEY -md md5
        - run:
            name: Run publishApkRelease
            command: ./gradlew publishApkRelease

workflows:
  version: 2
  deployment_pipeline:
    jobs:
      - commit:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - acceptance:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
          requires:
            - commit
      - prepare_uat:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
          requires:
            - acceptance
      - uat:
          type: approval
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
          requires:
            - prepare_uat
      - release:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
          requires:
            - uat
